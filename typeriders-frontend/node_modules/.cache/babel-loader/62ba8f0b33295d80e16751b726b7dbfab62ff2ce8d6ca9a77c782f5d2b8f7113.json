{"ast":null,"code":"var _jsxFileName = \"/Volumes/My Files/React/TypeRiders/typeriders-frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n// import { useLogin } from '../../hooks/useLogin'\n\n//styles\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [status, setStatus] = useState(\"status...\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    let details = {\n      email: email,\n      password: password\n    };\n    try {\n      let response = await fetch(\"http://localhost:2000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        body: JSON.stringify(details),\n        credentials: 'include'\n      });\n      setStatus(\"Submit\");\n      let result = await response.json();\n      alert(result.status);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  // const { login, error, isPending } = useLogin()\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"btn\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      disabled: true,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"pRykOeGuohfVW9/mUrX7A6BfY6w=\");\n_c = Login;\n;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","status","setStatus","handleSubmit","e","preventDefault","details","response","fetch","method","headers","body","JSON","stringify","credentials","result","json","alert","err","console","log","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","onClick","disabled","_c","$RefreshReg$"],"sources":["/Volumes/My Files/React/TypeRiders/typeriders-frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from 'react'\n// import { useLogin } from '../../hooks/useLogin'\n\n\n//styles\nimport './Login.css'\n\nexport default function Login() {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [status, setStatus] = useState(\"status...\");\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setStatus(\"Sending...\");\n        let details = {\n            email: email,\n            password: password,\n        };\n        try {\n            let response = await fetch(\"http://localhost:2000/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json;charset=utf-8\"\n                },\n                body: JSON.stringify(details),\n                credentials: 'include'\n            });\n            setStatus(\"Submit\");\n            let result = await response.json();\n            alert(result.status);\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n    // const { login, error, isPending } = useLogin()\n    return (\n        <form onSubmit={handleSubmit} className=\"login-form\">\n            <h2>Login</h2>\n            <label>\n                <span>Email: </span>\n                <input\n                    type=\"email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}\n                />\n            </label>\n            <label>\n                <span>Password: </span>\n                <input\n                    type=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    value={password}\n                />\n            </label>\n            {<button onClick={handleSubmit} className=\"btn\">Login</button>}\n            {<button className=\"btn\" disabled>{status}</button>}\n        </form>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}