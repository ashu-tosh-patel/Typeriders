{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabhi\\\\OneDrive\\\\Desktop\\\\Projects\\\\Typeriders\\\\typeriders-frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n// import { useLogin } from '../../hooks/useLogin'\n\n//styles\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [status, setStatus] = useState(\"status...\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    console.log(email, password);\n    let details = {\n      email: email,\n      password: password\n    };\n    let response = await fetch(\"http://localhost:2000/login\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n  // const { login, error, isPending } = useLogin()\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"btn\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      disabled: true,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"pRykOeGuohfVW9/mUrX7A6BfY6w=\");\n_c = Login;\n;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","status","setStatus","handleSubmit","e","preventDefault","console","log","details","response","fetch","method","headers","body","JSON","stringify","result","json","alert","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sabhi/OneDrive/Desktop/Projects/Typeriders/typeriders-frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from 'react'\r\n// import { useLogin } from '../../hooks/useLogin'\r\n\r\n\r\n//styles\r\nimport './Login.css'\r\n\r\nexport default function Login() {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [status, setStatus] = useState(\"status...\");\r\n    const handleSubmit = async (e) => {\r\n            e.preventDefault();\r\n            setStatus(\"Sending...\");\r\n            console.log(email, password);\r\n            let details = {\r\n                email: email,\r\n                password: password,\r\n            };\r\n            let response = await fetch(\"http://localhost:2000/login\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n                },\r\n                body: JSON.stringify(details)\r\n            });\r\n            setStatus(\"Submit\");\r\n            let result = await response.json();\r\n            alert(result.status);\r\n    }\r\n    // const { login, error, isPending } = useLogin()\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n            <h2>Login</h2>\r\n            <label>\r\n                <span>Email: </span>\r\n                <input\r\n                    type=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                />\r\n            </label>\r\n            <label>\r\n                <span>Password: </span>\r\n                <input\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                />\r\n            </label>\r\n            {<button onClick={handleSubmit} className=\"btn\">Login</button>}\r\n            {<button className=\"btn\" disabled>{status}</button>}\r\n        </form>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}