{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabhi\\\\OneDrive\\\\Desktop\\\\Projects\\\\Typeriders\\\\typeriders-frontend\\\\src\\\\pages\\\\Guest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n//styles\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    console.log(email, password);\n    let details = {\n      email: email,\n      password: password\n    };\n    try {\n      let response = await fetch(\"http://localhost:2000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        body: JSON.stringify(details)\n      });\n      setStatus(\"Submit\");\n      let result = await response.json();\n      alert(result.status);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Guest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setUserName(e.target.value),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"4VuJrN/ipsRQcM1gZETKYGzuiZk=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_s","userName","setUserName","password","setPassword","handleSubmit","e","preventDefault","setStatus","console","log","email","details","response","fetch","method","headers","body","JSON","stringify","result","json","alert","status","err","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/sabhi/OneDrive/Desktop/Projects/Typeriders/typeriders-frontend/src/pages/Guest.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\n\r\n\r\n//styles\r\nimport './Login.css'\r\n\r\nexport default function Login() {\r\n\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setStatus(\"Sending...\");\r\n        console.log(email, password);\r\n        let details = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        try{\r\n            let response = await fetch(\"http://localhost:2000/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n                },\r\n                body: JSON.stringify(details)\r\n            });\r\n            setStatus(\"Submit\");\r\n            let result = await response.json();\r\n            alert(result.status);\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n            <h2>Guest</h2>\r\n            <label>\r\n                <span>Username: </span>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                    value={userName}\r\n                />\r\n            </label>\r\n            {<button className=\"btn\">Continue</button>}\r\n        </form>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAIhC;AACA,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,SAAS,CAAC,YAAY,CAAC;IACvBC,OAAO,CAACC,GAAG,CAACC,KAAK,EAAER,QAAQ,CAAC;IAC5B,IAAIS,OAAO,GAAG;MACVD,KAAK,EAAEA,KAAK;MACZR,QAAQ,EAAEA;IACd,CAAC;IACD,IAAG;MACC,IAAIU,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACT,cAAc,EAAE;QAChB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;MAChC,CAAC,CAAC;MACFJ,SAAS,CAAC,QAAQ,CAAC;MACnB,IAAIY,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,KAAK,CAACF,MAAM,CAACG,MAAM,CAAC;IACxB,CAAC,CACD,OAAMC,GAAG,EAAC;MACNf,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;IACpB;EACJ,CAAC;EACD,oBACI1B,OAAA;IAAM2B,QAAQ,EAAEpB,YAAa;IAACqB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAChD7B,OAAA;MAAA6B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdjC,OAAA;MAAA6B,QAAA,gBACI7B,OAAA;QAAA6B,QAAA,EAAM;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvBjC,OAAA;QACIkC,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAG3B,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAAC4B,MAAM,CAACC,KAAK,CAAE;QAC7CA,KAAK,EAAElC;MAAS;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACPjC,OAAA;MAAQ4B,SAAS,EAAC,KAAK;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf;AAAC/B,EAAA,CA1CuBD,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}